# Build version
version: "1.8.2.{build}"

# Use the latest available toolchain
image:
  - macos
  - Ubuntu2004
  - Visual Studio 2019

# fetch repository as zip archive
shallow_clone: true

# PRs do not increment the build number
pull_requests:
  do_not_increment_build_number: true

# Build configurations
configuration: Release

# Default environment variables
environment:
  _IS_BUILD_CONTINOUS: false
  _RELEASE_NAME: Makou_Reactor
  _RELEASE_VERSION: v0

# Do not run unit tests
test: off

for:
  # macOS build
  - matrix:
      only:
        - image: macos
    install:
      - sh: |
          export _APP_VERSION=`echo $APPVEYOR_BUILD_VERSION |  cut -d. -f1-3`
          if [[ $APPVEYOR_REPO_TAG -eq "true" && ! -z $APPVEYOR_REPO_TAG_NAME ]];
          then
            export APPVEYOR_BUILD_VERSION="${_APP_VERSION}.0"
            export _RELEASE_VERSION="v${APPVEYOR_BUILD_VERSION}"
          else
            export _RELEASE_VERSION="Continous"
            export APPVEYOR_REPO_TAG_NAME="continous"
            export _IS_BUILD_CONTINOUS="true"
          fi
      - sh: |
          npm install --global create-dmg
          brew install qt
    build_script:
      - sh: |
          mkdir -p .dist/build
          mkdir -p .dist/install
          cmake -S . -B .dist/build -DCMAKE_INSTALL_PREFIX=.dist/install -DCMAKE_BUILD_TYPE=${CONFIGURATION}
          cmake --build .dist/build --config ${CONFIGURATION}
          mv .dist/build/bin/*.qm .dist/build/bin/${_RELEASE_NAME}.app/Contents/MacOS/
          mv src/qt/images/${_RELEASE_NAME}.icns .dist/build/bin/${_RELEASE_NAME}.app/Contents/Resources/
          create-dmg .dist/build/bin/${_RELEASE_NAME}.app ./
          mv *.dmg ${_RELEASE_NAME}-${_RELEASE_VERSION}-x86_64.dmg
    artifacts:
      - path: ./${_RELEASE_NAME}-${_RELEASE_VERSION}-x86_64.dmg
        name: ${_RELEASE_NAME}-${_RELEASE_VERSION}
        type: File
  # Linux build
  - matrix:
      only:
        - image: Ubuntu2004
    install:
      - sh: |
          export _APP_VERSION=`echo $APPVEYOR_BUILD_VERSION |  cut -d. -f1-3`
          if [[ $APPVEYOR_REPO_TAG -eq "true" && ! -z $APPVEYOR_REPO_TAG_NAME ]];
          then
            export APPVEYOR_BUILD_VERSION="${_APP_VERSION}.0"
            export _RELEASE_VERSION="v${APPVEYOR_BUILD_VERSION}"
          else
            export _RELEASE_VERSION="Continous"
            export APPVEYOR_REPO_TAG_NAME="continous"
            export _IS_BUILD_CONTINOUS="true"
          fi
      - sh: |
          sudo apt-get update
          sudo apt-get install -y qt5-default qttools5-dev
    build_script:
      - sh: |
          mkdir -p .dist/build
          mkdir -p .dist/install
          cmake -S . -B .dist/build -DCMAKE_INSTALL_PREFIX=.dist/install -DCMAKE_BUILD_TYPE=${CONFIGURATION}
          cmake --build .dist/build --config ${CONFIGURATION}
          chmod +x misc/appimage/generate.sh
          ./misc/appimage/generate.sh .appimage ${_RELEASE_NAME} ${_RELEASE_VERSION}
    artifacts:
      - path: ./${_RELEASE_NAME}-${_RELEASE_VERSION}-x86_64.AppImage
        name: ${_RELEASE_NAME}-${_RELEASE_VERSION}
        type: File
      - path: ./${_RELEASE_NAME}-${_RELEASE_VERSION}-x86_64.AppImage.zsync
        name: ${_RELEASE_NAME}-${_RELEASE_VERSION}_ZSYNC
        type: File
  # Windows build
  - matrix:
      only:
        - image: Visual Studio 2019
    environment:
      # Qt related
      _CMAKE_QT_DIR: C:\Qt\5.15\msvc2019
    install:
      - cmd: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars32.bat"
      - ps: |
          if ($env:APPVEYOR_REPO_TAG -eq "true" -and $env:APPVEYOR_REPO_TAG_NAME) {
            $env:APPVEYOR_BUILD_VERSION = $env:APPVEYOR_BUILD_VERSION.Substring(0,$env:APPVEYOR_BUILD_VERSION.LastIndexOf('.')) + ".0"
            $env:_RELEASE_VERSION = "v" + $env:APPVEYOR_BUILD_VERSION
          } else {
            $env:_RELEASE_VERSION = "Continous"
            $env:APPVEYOR_REPO_TAG_NAME = "continous"
            $env:_IS_BUILD_CONTINOUS = "true"
          }
    build_script:
      - cmd: |
          md .dist\build
          md .dist\install
          cmake -G "Visual Studio 16 2019" -A Win32 -S . -B .dist/build -DCMAKE_INSTALL_PREFIX=.dist/install -DCMAKE_BUILD_TYPE=%CONFIGURATION%
          cmake --build .dist/build --config %CONFIGURATION%
    artifacts:
      - path: .dist/build/bin
        name: ${_RELEASE_NAME}-${_RELEASE_VERSION}
        type: zip

deploy:
  # Deploy only when new tags are pushed
  - provider: GitHub
    tag: ${appveyor_repo_tag_name}
    release: ${_RELEASE_NAME}-${_RELEASE_VERSION}
    artifact: ${_RELEASE_NAME}-${_RELEASE_VERSION}, ${_RELEASE_NAME}-${_RELEASE_VERSION}_ZSYNC
    auth_token:
      secure: Q8v2IrepAs+HGD3atYI/0cI52LrxaYzRZKDBaFMSjsz1NPoUrj+Q4lZaZzFaLa4v
    on:
      branch: master
      _IS_BUILD_CANARY: false
  # Deploy on each commit
  - provider: GitHub
    tag: ${appveyor_repo_tag_name}
    release: ${_RELEASE_NAME}-v${appveyor_build_version}
    artifact: ${_RELEASE_NAME}-${_RELEASE_VERSION}, ${_RELEASE_NAME}-${_RELEASE_VERSION}_ZSYNC
    prerelease: true
    force_update: true
    auth_token:
      secure: Q8v2IrepAs+HGD3atYI/0cI52LrxaYzRZKDBaFMSjsz1NPoUrj+Q4lZaZzFaLa4v
    on:
      branch: master
      _IS_BUILD_CANARY: true
