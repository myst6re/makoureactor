###############################################################################
#TEMPORARILY DISABLED UNTIL THE CMAKE BUILD FLOW IS ADOPTED FOR TRAVIS TOO!#
###############################################################################

# language: cpp
# dist: xenial
# osx_image: xcode12

# os:
# - linux
# - osx
# env:
#   global:
#     # COVERITY_SCAN_TOKEN
#     - secure: "lk7jEPh62LhXOWyT5UyGAKPxiskVyIBbHEtbnfKZZil2iJLec1f3+df1ADPajl1Ij2Yp4ZgWWcJsuN/+XkQJjXvgWyW2bi0K9ntrRCU4t3h8blodblaXvpssbz5fj4TzI8HnfBet4NXfLLdAUHBcLOLU01xb+LWaY/4rX2PlKBY="
#   jobs:
#   - CONSOLE=1
#   - CONSOLE=0
# jobs:
#   exclude:
# # Only do coverity or coverage build on Linux when the compiler is gcc
#   - os: linux
#     compiler: clang
#     env: COVERITY=1
#     env: COVERAGE=1
# # Don't build with clang on Linux
#   - os: linux
#     compiler: clang
# # Don't build with gcc on OSX
#   - os: osx
#     compiler: gcc

# os:
#  - linux
#  - osx
# matrix:
#  exclude:
# # Only do coverity or coverage build on Linux when the compiler is gcc
#   - os: linux
#     compiler: clang
#     env: COVERITY=1
#     env: COVERAGE=1
# # Don't build with clang on Linux
#   - os: linux
#     compiler: clang
# # Don't build with gcc on OSX
#   - os: osx
#     compiler: gcc

# script:
# - mkdir -p build
# - env
# - cd build
# - if [ "$CONSOLE" = 1 ]; then QMAKE_ARGS="CONFIG+=console"; else QMAKE_ARGS=""; fi
# - qmake -config release .. $QMAKE_ARGS
# - make -j2
# - if [ "$TRAVIS_OS_NAME" = "linux" ]; then
#     make INSTALL_ROOT=appdir install; find appdir/; 
#     mv appdir/usr/share/makoureactor/*.qm appdir/usr/bin/;
#     rm -rf appdir/usr/share/makoureactor;
#     wget -c "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"; 
#     chmod a+x linuxdeployqt*.AppImage; 
#     unset QTDIR; unset QT_PLUGIN_PATH; unset LD_LIBRARY_PATH; 
#     ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -bundle-non-qt-libs; 
#     ./linuxdeployqt*.AppImage ./appdir/usr/share/applications/*.desktop -appimage;
#   fi
# - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
#     mv ../*.qm makoureactor.app/Contents/MacOS/; 
#     macdeployqt makoureactor.app/ -dmg;  
#   fi
# after_success:
# - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
# - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
#     find ./appdir -executable -type f -exec ldd {} \; | grep " => /usr" | cut -d " " -f 2-3 | sort | uniq ; 
#     bash ./upload.sh Makou*.AppImage*;
#   else
#     bash ./upload.sh *.dmg*;
#   fi

# before_deploy:
# - DEPLOY_DIR="makoureactor-$(git describe --tags)-${TRAVIS_OS_NAME}64"
# - export DEPLOY_ARCHIVE="$DEPLOY_DIR.tar.gz"
# - mkdir -p "$DEPLOY_DIR"
# - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then
#        DEPLOY_BINARY="makoureactor.app"
#     && cp -r "$DEPLOY_BINARY" "$DEPLOY_DIR"
#     && cp ../*.qm "$DEPLOY_DIR/$DEPLOY_BINARY/Contents/MacOS"
#     && "$QTDIR/bin/macdeployqt" "$DEPLOY_DIR/$DEPLOY_BINARY"
#     ;
#   else
#        cp makoureactor "$DEPLOY_DIR"
#     && cp ../*.qm "$DEPLOY_DIR"
#     ;
#   fi
# - tar -czf "$DEPLOY_ARCHIVE" "$DEPLOY_DIR"

# deploy:
#   provider: releases
#   token:
#     secure: "B4xjY+hcZOob6hGLx8b5Ykxk+8sN9M+XwfnuhRReR1YRFvXZdcUUiL/VusDM0iapUGhkuvbO0AQEeLPaC69uBNdxQsBJFGFMzrHZGEtuBFl44SJB+lZGRTVemj3AZ4f5aQvTkKFbt7M+/sjkWa6ZP6EHdrAN2XCp4emrwKBApO4="
#   file: "$DEPLOY_ARCHIVE"
#   skip_cleanup: true
#   on:
#     tags: true
#     branch: deploy

# branches:
#   except:
#   - coverity_scan
#   - continuous

# env:
#   global:
#     # COVERITY_SCAN_TOKEN
#     - secure: "lk7jEPh62LhXOWyT5UyGAKPxiskVyIBbHEtbnfKZZil2iJLec1f3+df1ADPajl1Ij2Yp4ZgWWcJsuN/+XkQJjXvgWyW2bi0K9ntrRCU4t3h8blodblaXvpssbz5fj4TzI8HnfBet4NXfLLdAUHBcLOLU01xb+LWaY/4rX2PlKBY="

# addons:
#   coverity_scan:
#     project:
#       name: myst6re/makoureactor
#       description: Final Fantasy VII field archive editor
#     notification_email: myst6re@gmail.com
#     build_command: make -j2
#     branch_pattern: coverity_scan
